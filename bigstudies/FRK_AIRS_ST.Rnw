<<eval=TRUE>>=
library(sp)
library(ggplot2)
library(dplyr)
library(spacetime)
#library(FRK)
      devtools::load_all("~/Wollongong/pkgs/FRK",
                              export_all = FALSE)
opts_FRK$set("progress",FALSE)
opts_FRK$set("parallel",0L)
@



<<eval=TRUE>>=
## Load data
data(AIRS_05_2003)
warning("subsampling because it will take too long otherwise")
AIRS_05_2003 <- filter(AIRS_05_2003,day < 16 & month == 5) %>%
                mutate(std=co2std,
                       t = day) %>%
                select(lon,lat,t,co2avgret,std) %>%
                sample_n(20000)
time <- as.POSIXct("2003-05-01",tz="") + 3600*24*(AIRS_05_2003$t-1)
space <- AIRS_05_2003[,c("lon","lat")]
coordinates(space) = ~lon+lat # change into an sp object
proj4string(space)=CRS("+proj=longlat")
STobj <- STIDF(space,time,data=AIRS_05_2003)
# stplot(STobj[,,"co2avgret"])
@

<<eval=TRUE>>=
## Prediction (BAU) grid
isea3h_sp_poldf <- auto_BAUs(manifold=STsphere(),res=6,data=STobj,cellsize = c(5,5,1),type="hex")
isea3h_sp_poldf$fs = 1
@


<<>>=TRUE=
## Adjust the scale
TwoD_ST <- STsphere()
uni_sphere <- STsphere()
scaler <- diag(c(1,1,500))
asymm_measure <- new("measure",dist=function(x1,x2) { uni_sphere@metric@dist(x1 %*% scaler,x2 %*% scaler)}, dim=3L)
TwoD_ST@metric <- asymm_measure
@

<<eval=TRUE>>=
## Set up SRE model
G_spatial <- auto_basis(m = sphere(),
                        data=as(STobj,"Spatial"),
                        nres = 3,prune=15,
                        type = "bisquare",
                        subsamp = 20000)

G_temporal <- radial_basis(manifold=real_line(),loc = matrix(c(2,7,12)),scale = rep(3,3))
G_spacetime <- TensorP(G_spatial,G_temporal)

#G_spacetime <- sp_to_ST_basis(G_spatial,t_knots = c(2,7,12),manifold = TwoD_ST)
@

<<eval=TRUE>>=
f <- co2avgret ~ lat +1
S <- SRE(f,list(STobj),
         G_spacetime,
         isea3h_sp_poldf,
         est_error = FALSE)
@

<<eval=TRUE>>=
S <- SRE.fit(S,n_EM = 3,tol = 1e-5,print_lik=TRUE)
@

<<eval=TRUE>>=
isea3h_sp_poldf <- SRE.predict(S,pred_locs = isea3h_sp_poldf,use_centroid = TRUE)
@

<<eval=TRUE>>=
X <- lapply(1:length(time(isea3h_sp_poldf)), function(i) {
    SpatialPolygonsDataFrame_to_df(sp_polys = isea3h_sp_poldf[,i],
                                    vars = c("mu","var")) %>%
        mutate(t = i)})
X <- do.call("rbind",X)


g1 <-  (EmptyTheme() +
            geom_polygon(data=filter(X,(t %in% c(1,4,9,13)) & abs(lon) < 170),
                         aes(lon,lat,fill=mu,group=id))+
#             geom_tile(data=filter(X,t %in% 1:2),
#                         aes(lon,lat,fill=mu))+
           scale_fill_distiller(palette="Spectral",trans="reverse") +
           coord_map("mollweide") +
           facet_wrap(~t)) %>%
    draw_world(inc_border=FALSE)


mumin <- min(X$mu)
mumax <- max(X$mu)

g2 <- (EmptyTheme() +
           geom_point(data=data.frame(AIRS_05_2003),
                      aes(lon,lat,
                          colour=pmin(pmax(
                              co2avgret,mumin),
                              mumax)),
                      size=2) +
           scale_colour_distiller(palette="Spectral",
                                  trans="reverse",
                                  guide_legend(title="co2")
           ) +
           coord_map("mollweide")) %>%
    draw_world(inc_border=TRUE)

print(g1)
print(g2)
@
